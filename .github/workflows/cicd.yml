name: eShopOnWeb cicd test

#Triggers (uncomment line below to use it)
on:
  workflow_dispatch

#Environment variables https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  TEMPLATE-FILE: infra/webapp.bicep
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  DD_CIVISIBILITY_AGENTLESS_ENABLED: true
  DD_SITE: datadoghq.eu
  

jobs:
  #Build, test and publish .net web project in repository
  buildandtest:
    runs-on: ubuntu-latest
    steps:
    #checkout the repository
    - uses: actions/checkout@v4
    #prepare runner for desired .net version SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        include-prerelease: true
    # Dontet Tools
    - name: Check for package update
      run: dotnet tool update -g dd-trace
      
    #Build/Test/Publish the .net project
    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test with dotnet
      run: |
        #dotnet test ./eShopOnWeb.sln --configuration Release
        # dd-trace ci run --dd-service=my-dotnet-app --dd-env=ci -- dotnet test ./eShopOnWeb.sln --configuration Release
        dd-trace ci run --dd-service=my-dotnet-app --dd-env=ci -- dotnet test ./eShopOnWeb.sln

  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development'
    steps:

    - name: check
      run: |
        pwd
        ls -la
        
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PWD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # Download the publish files created in previous job
    - name: Build and push image to ACR
      uses: docker/build-push-action@v5
      with:
        context: .
        file: /src/Web/Dockerfile
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
